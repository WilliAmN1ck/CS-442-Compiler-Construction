Terminals which are not used

   AND_TOK
   OR_TOK
   NOT_TOK


State 67 conflicts: 1 shift/reduce
State 107 conflicts: 2 shift/reduce


Grammar

    0 $accept: Module $end

    1 Module: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: IdList ':' BaseType
    5     | IdList "::" Literal
    6     | IdList ':' FuncDecl
    7     | IdList "::" CodeBlock

    8 IdList: IdItem ',' IdList
    9       | IdItem

   10 IdItem: Id

   11 Id: IDENT_TOK

   12 BaseType: "int"
   13         | "chr"
   14         | "bool"
   15         | "void"

   16 Literal: INTLIT_TOK
   17        | CHRLIT_TOK
   18        | BOOLLIT_TOK

   19 FuncDecl: '(' ')' "->" BaseType

   20 CodeBlock: '{' StmtSeq '}'

   21 StmtSeq: Stmt StmtSeq
   22        | /* empty */

   23 Stmt: AssignStmt
   24     | PutStmt
   25     | IfStmt
   26     | IfElseStmt
   27     | WhileStmt
   28     | FuncCall
   29     | IncrDecr
   30     | ForStmt

   31 PutStmt: PUT_TOK '(' Expr ')'
   32        | PUT_TOK '(' BoolString ')'
   33        | PUT_TOK '(' StringLit ')'

   34 IfStmt: IF_TOK Cond FuncBody

   35 IfElseStmt: IF_TOK Cond FuncBody ELSE_TOK FuncBody

   36 WhileStmt: WHILE_TOK Cond FuncBody

   37 IncrDecr: Id INCR_TOK
   38         | Id DECR_TOK

   39 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' IncrDecr ')' FuncBody

   40 Factor: Id '[' Index ']'

   41 Index: INDEX_TOK

   42 StringLit: STRING_LIT_TOK

   43 BoolString: BOOLLIT_TOK

   44 AssignStmt: Id '=' Expr

   45 FuncCall: Id '(' ')'

   46 BoolOp: LT_TOK
   47       | LTE_TOK
   48       | GT_TOK
   49       | GTE_TOK
   50       | EQUAL_TOK
   51       | NEQUAL_TOK

   52 FuncBody: '{' FuncStmts '}'

   53 FuncStmts: Stmt FuncStmts
   54          | /* empty */

   55 Cond: Expr BoolOp Expr

   56 Expr: Expr AddOp Expr
   57     | Term

   58 Term: Term MultOp Factor
   59     | Factor

   60 Factor: '(' Expr ')'
   61       | '-' Factor
   62       | INTLIT_TOK
   63       | CHRLIT_TOK
   64       | Id
   65       | GET_TOK '(' Type ')'
   66       | BoolString

   67 Type: "int"
   68     | "chr"

   69 AddOp: '+'
   70      | '-'

   71 MultOp: '*'
   72       | '/'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19 31 32 33 39 45 60 65
')' (41) 19 31 32 33 39 45 60 65
'*' (42) 71
'+' (43) 69
',' (44) 8
'-' (45) 61 70
'/' (47) 72
':' (58) 4 6
';' (59) 39
'=' (61) 44
'[' (91) 40
']' (93) 40
'{' (123) 20 52
'}' (125) 20 52
error (256)
IDENT_TOK (258) 11
"int" (259) 12 67
"chr" (260) 13 68
"bool" (261) 14
"void" (262) 15
INTLIT_TOK (263) 16 62
CHRLIT_TOK (264) 17 63
BOOLLIT_TOK (265) 18 43
"->" (266) 19
"::" (267) 5 7
GET_TOK (268) 65
PUT_TOK (269) 31 32 33
IF_TOK (270) 34 35
ELSE_TOK (271) 35
WHILE_TOK (272) 36
LT_TOK (273) 46
LTE_TOK (274) 47
GT_TOK (275) 48
GTE_TOK (276) 49
EQUAL_TOK (277) 50
NEQUAL_TOK (278) 51
STRING_LIT_TOK (279) 42
INCR_TOK (280) 37
DECR_TOK (281) 38
AND_TOK (282)
OR_TOK (283)
NOT_TOK (284)
FOR_TOK (285) 39
INDEX_TOK (286) 41
UMINUS (287)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
Module (48)
    on left: 1, on right: 0
DeclList (49)
    on left: 2 3, on right: 1 2
Decl (50)
    on left: 4 5 6 7, on right: 2 3
IdList (51)
    on left: 8 9, on right: 4 5 6 7 8
IdItem (52)
    on left: 10, on right: 8 9
Id (53)
    on left: 11, on right: 10 37 38 40 44 45 64
BaseType (54)
    on left: 12 13 14 15, on right: 4 19
Literal (55)
    on left: 16 17 18, on right: 5
FuncDecl (56)
    on left: 19, on right: 6
CodeBlock (57)
    on left: 20, on right: 7
StmtSeq (58)
    on left: 21 22, on right: 20 21
Stmt (59)
    on left: 23 24 25 26 27 28 29 30, on right: 21 53
PutStmt (60)
    on left: 31 32 33, on right: 24
IfStmt (61)
    on left: 34, on right: 25
IfElseStmt (62)
    on left: 35, on right: 26
WhileStmt (63)
    on left: 36, on right: 27
IncrDecr (64)
    on left: 37 38, on right: 29 39
ForStmt (65)
    on left: 39, on right: 30
Factor (66)
    on left: 40 60 61 62 63 64 65 66, on right: 58 59 61
Index (67)
    on left: 41, on right: 40
StringLit (68)
    on left: 42, on right: 33
BoolString (69)
    on left: 43, on right: 32 66
AssignStmt (70)
    on left: 44, on right: 23 39
FuncCall (71)
    on left: 45, on right: 28
BoolOp (72)
    on left: 46 47 48 49 50 51, on right: 55
FuncBody (73)
    on left: 52, on right: 34 35 36 39
FuncStmts (74)
    on left: 53 54, on right: 52 53
Cond (75)
    on left: 55, on right: 34 35 36 39
Expr (76)
    on left: 56 57, on right: 31 44 55 56 60
Term (77)
    on left: 58 59, on right: 57 58
Type (78)
    on left: 67 68, on right: 65
AddOp (79)
    on left: 69 70, on right: 56
MultOp (80)
    on left: 71 72, on right: 58


state 0

    0 $accept: . Module $end

    IDENT_TOK  shift, and go to state 1

    Module    go to state 2
    DeclList  go to state 3
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


state 1

   11 Id: IDENT_TOK .

    $default  reduce using rule 11 (Id)


state 2

    0 $accept: Module . $end

    $end  shift, and go to state 8


state 3

    1 Module: DeclList .

    $default  reduce using rule 1 (Module)


state 4

    2 DeclList: Decl . DeclList
    3         | Decl .

    IDENT_TOK  shift, and go to state 1

    $default  reduce using rule 3 (DeclList)

    DeclList  go to state 9
    Decl      go to state 4
    IdList    go to state 5
    IdItem    go to state 6
    Id        go to state 7


state 5

    4 Decl: IdList . ':' BaseType
    5     | IdList . "::" Literal
    6     | IdList . ':' FuncDecl
    7     | IdList . "::" CodeBlock

    "::"  shift, and go to state 10
    ':'   shift, and go to state 11


state 6

    8 IdList: IdItem . ',' IdList
    9       | IdItem .

    ','  shift, and go to state 12

    $default  reduce using rule 9 (IdList)


state 7

   10 IdItem: Id .

    $default  reduce using rule 10 (IdItem)


state 8

    0 $accept: Module $end .

    $default  accept


state 9

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


state 10

    5 Decl: IdList "::" . Literal
    7     | IdList "::" . CodeBlock

    INTLIT_TOK   shift, and go to state 13
    CHRLIT_TOK   shift, and go to state 14
    BOOLLIT_TOK  shift, and go to state 15
    '{'          shift, and go to state 16

    Literal    go to state 17
    CodeBlock  go to state 18


state 11

    4 Decl: IdList ':' . BaseType
    6     | IdList ':' . FuncDecl

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22
    '('     shift, and go to state 23

    BaseType  go to state 24
    FuncDecl  go to state 25


state 12

    8 IdList: IdItem ',' . IdList

    IDENT_TOK  shift, and go to state 1

    IdList  go to state 26
    IdItem  go to state 6
    Id      go to state 7


state 13

   16 Literal: INTLIT_TOK .

    $default  reduce using rule 16 (Literal)


state 14

   17 Literal: CHRLIT_TOK .

    $default  reduce using rule 17 (Literal)


state 15

   18 Literal: BOOLLIT_TOK .

    $default  reduce using rule 18 (Literal)


state 16

   20 CodeBlock: '{' . StmtSeq '}'

    IDENT_TOK  shift, and go to state 1
    PUT_TOK    shift, and go to state 27
    IF_TOK     shift, and go to state 28
    WHILE_TOK  shift, and go to state 29
    FOR_TOK    shift, and go to state 30

    $default  reduce using rule 22 (StmtSeq)

    Id          go to state 31
    StmtSeq     go to state 32
    Stmt        go to state 33
    PutStmt     go to state 34
    IfStmt      go to state 35
    IfElseStmt  go to state 36
    WhileStmt   go to state 37
    IncrDecr    go to state 38
    ForStmt     go to state 39
    AssignStmt  go to state 40
    FuncCall    go to state 41


state 17

    5 Decl: IdList "::" Literal .

    $default  reduce using rule 5 (Decl)


state 18

    7 Decl: IdList "::" CodeBlock .

    $default  reduce using rule 7 (Decl)


state 19

   12 BaseType: "int" .

    $default  reduce using rule 12 (BaseType)


state 20

   13 BaseType: "chr" .

    $default  reduce using rule 13 (BaseType)


state 21

   14 BaseType: "bool" .

    $default  reduce using rule 14 (BaseType)


state 22

   15 BaseType: "void" .

    $default  reduce using rule 15 (BaseType)


state 23

   19 FuncDecl: '(' . ')' "->" BaseType

    ')'  shift, and go to state 42


state 24

    4 Decl: IdList ':' BaseType .

    $default  reduce using rule 4 (Decl)


state 25

    6 Decl: IdList ':' FuncDecl .

    $default  reduce using rule 6 (Decl)


state 26

    8 IdList: IdItem ',' IdList .

    $default  reduce using rule 8 (IdList)


state 27

   31 PutStmt: PUT_TOK . '(' Expr ')'
   32        | PUT_TOK . '(' BoolString ')'
   33        | PUT_TOK . '(' StringLit ')'

    '('  shift, and go to state 43


state 28

   34 IfStmt: IF_TOK . Cond FuncBody
   35 IfElseStmt: IF_TOK . Cond FuncBody ELSE_TOK FuncBody

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 44
    CHRLIT_TOK   shift, and go to state 45
    BOOLLIT_TOK  shift, and go to state 46
    GET_TOK      shift, and go to state 47
    '-'          shift, and go to state 48
    '('          shift, and go to state 49

    Id          go to state 50
    Factor      go to state 51
    BoolString  go to state 52
    Cond        go to state 53
    Expr        go to state 54
    Term        go to state 55


state 29

   36 WhileStmt: WHILE_TOK . Cond FuncBody

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 44
    CHRLIT_TOK   shift, and go to state 45
    BOOLLIT_TOK  shift, and go to state 46
    GET_TOK      shift, and go to state 47
    '-'          shift, and go to state 48
    '('          shift, and go to state 49

    Id          go to state 50
    Factor      go to state 51
    BoolString  go to state 52
    Cond        go to state 56
    Expr        go to state 54
    Term        go to state 55


state 30

   39 ForStmt: FOR_TOK . '(' AssignStmt ';' Cond ';' IncrDecr ')' FuncBody

    '('  shift, and go to state 57


state 31

   37 IncrDecr: Id . INCR_TOK
   38         | Id . DECR_TOK
   44 AssignStmt: Id . '=' Expr
   45 FuncCall: Id . '(' ')'

    INCR_TOK  shift, and go to state 58
    DECR_TOK  shift, and go to state 59
    '('       shift, and go to state 60
    '='       shift, and go to state 61


state 32

   20 CodeBlock: '{' StmtSeq . '}'

    '}'  shift, and go to state 62


state 33

   21 StmtSeq: Stmt . StmtSeq

    IDENT_TOK  shift, and go to state 1
    PUT_TOK    shift, and go to state 27
    IF_TOK     shift, and go to state 28
    WHILE_TOK  shift, and go to state 29
    FOR_TOK    shift, and go to state 30

    $default  reduce using rule 22 (StmtSeq)

    Id          go to state 31
    StmtSeq     go to state 63
    Stmt        go to state 33
    PutStmt     go to state 34
    IfStmt      go to state 35
    IfElseStmt  go to state 36
    WhileStmt   go to state 37
    IncrDecr    go to state 38
    ForStmt     go to state 39
    AssignStmt  go to state 40
    FuncCall    go to state 41


state 34

   24 Stmt: PutStmt .

    $default  reduce using rule 24 (Stmt)


state 35

   25 Stmt: IfStmt .

    $default  reduce using rule 25 (Stmt)


state 36

   26 Stmt: IfElseStmt .

    $default  reduce using rule 26 (Stmt)


state 37

   27 Stmt: WhileStmt .

    $default  reduce using rule 27 (Stmt)


state 38

   29 Stmt: IncrDecr .

    $default  reduce using rule 29 (Stmt)


state 39

   30 Stmt: ForStmt .

    $default  reduce using rule 30 (Stmt)


state 40

   23 Stmt: AssignStmt .

    $default  reduce using rule 23 (Stmt)


state 41

   28 Stmt: FuncCall .

    $default  reduce using rule 28 (Stmt)


state 42

   19 FuncDecl: '(' ')' . "->" BaseType

    "->"  shift, and go to state 64


state 43

   31 PutStmt: PUT_TOK '(' . Expr ')'
   32        | PUT_TOK '(' . BoolString ')'
   33        | PUT_TOK '(' . StringLit ')'

    IDENT_TOK       shift, and go to state 1
    INTLIT_TOK      shift, and go to state 44
    CHRLIT_TOK      shift, and go to state 45
    BOOLLIT_TOK     shift, and go to state 46
    GET_TOK         shift, and go to state 47
    STRING_LIT_TOK  shift, and go to state 65
    '-'             shift, and go to state 48
    '('             shift, and go to state 49

    Id          go to state 50
    Factor      go to state 51
    StringLit   go to state 66
    BoolString  go to state 67
    Expr        go to state 68
    Term        go to state 55


state 44

   62 Factor: INTLIT_TOK .

    $default  reduce using rule 62 (Factor)


state 45

   63 Factor: CHRLIT_TOK .

    $default  reduce using rule 63 (Factor)


state 46

   43 BoolString: BOOLLIT_TOK .

    $default  reduce using rule 43 (BoolString)


state 47

   65 Factor: GET_TOK . '(' Type ')'

    '('  shift, and go to state 69


state 48

   61 Factor: '-' . Factor

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 44
    CHRLIT_TOK   shift, and go to state 45
    BOOLLIT_TOK  shift, and go to state 46
    GET_TOK      shift, and go to state 47
    '-'          shift, and go to state 48
    '('          shift, and go to state 49

    Id          go to state 50
    Factor      go to state 70
    BoolString  go to state 52


state 49

   60 Factor: '(' . Expr ')'

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 44
    CHRLIT_TOK   shift, and go to state 45
    BOOLLIT_TOK  shift, and go to state 46
    GET_TOK      shift, and go to state 47
    '-'          shift, and go to state 48
    '('          shift, and go to state 49

    Id          go to state 50
    Factor      go to state 51
    BoolString  go to state 52
    Expr        go to state 71
    Term        go to state 55


state 50

   40 Factor: Id . '[' Index ']'
   64       | Id .

    '['  shift, and go to state 72

    $default  reduce using rule 64 (Factor)


state 51

   59 Term: Factor .

    $default  reduce using rule 59 (Term)


state 52

   66 Factor: BoolString .

    $default  reduce using rule 66 (Factor)


state 53

   34 IfStmt: IF_TOK Cond . FuncBody
   35 IfElseStmt: IF_TOK Cond . FuncBody ELSE_TOK FuncBody

    '{'  shift, and go to state 73

    FuncBody  go to state 74


state 54

   55 Cond: Expr . BoolOp Expr
   56 Expr: Expr . AddOp Expr

    LT_TOK      shift, and go to state 75
    LTE_TOK     shift, and go to state 76
    GT_TOK      shift, and go to state 77
    GTE_TOK     shift, and go to state 78
    EQUAL_TOK   shift, and go to state 79
    NEQUAL_TOK  shift, and go to state 80
    '+'         shift, and go to state 81
    '-'         shift, and go to state 82

    BoolOp  go to state 83
    AddOp   go to state 84


state 55

   57 Expr: Term .
   58 Term: Term . MultOp Factor

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 57 (Expr)

    MultOp  go to state 87


state 56

   36 WhileStmt: WHILE_TOK Cond . FuncBody

    '{'  shift, and go to state 73

    FuncBody  go to state 88


state 57

   39 ForStmt: FOR_TOK '(' . AssignStmt ';' Cond ';' IncrDecr ')' FuncBody

    IDENT_TOK  shift, and go to state 1

    Id          go to state 89
    AssignStmt  go to state 90


state 58

   37 IncrDecr: Id INCR_TOK .

    $default  reduce using rule 37 (IncrDecr)


state 59

   38 IncrDecr: Id DECR_TOK .

    $default  reduce using rule 38 (IncrDecr)


state 60

   45 FuncCall: Id '(' . ')'

    ')'  shift, and go to state 91


state 61

   44 AssignStmt: Id '=' . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 44
    CHRLIT_TOK   shift, and go to state 45
    BOOLLIT_TOK  shift, and go to state 46
    GET_TOK      shift, and go to state 47
    '-'          shift, and go to state 48
    '('          shift, and go to state 49

    Id          go to state 50
    Factor      go to state 51
    BoolString  go to state 52
    Expr        go to state 92
    Term        go to state 55


state 62

   20 CodeBlock: '{' StmtSeq '}' .

    $default  reduce using rule 20 (CodeBlock)


state 63

   21 StmtSeq: Stmt StmtSeq .

    $default  reduce using rule 21 (StmtSeq)


state 64

   19 FuncDecl: '(' ')' "->" . BaseType

    "int"   shift, and go to state 19
    "chr"   shift, and go to state 20
    "bool"  shift, and go to state 21
    "void"  shift, and go to state 22

    BaseType  go to state 93


state 65

   42 StringLit: STRING_LIT_TOK .

    $default  reduce using rule 42 (StringLit)


state 66

   33 PutStmt: PUT_TOK '(' StringLit . ')'

    ')'  shift, and go to state 94


state 67

   32 PutStmt: PUT_TOK '(' BoolString . ')'
   66 Factor: BoolString .

    ')'  shift, and go to state 95

    ')'       [reduce using rule 66 (Factor)]
    $default  reduce using rule 66 (Factor)


state 68

   31 PutStmt: PUT_TOK '(' Expr . ')'
   56 Expr: Expr . AddOp Expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    ')'  shift, and go to state 96

    AddOp  go to state 84


state 69

   65 Factor: GET_TOK '(' . Type ')'

    "int"  shift, and go to state 97
    "chr"  shift, and go to state 98

    Type  go to state 99


state 70

   61 Factor: '-' Factor .

    $default  reduce using rule 61 (Factor)


state 71

   56 Expr: Expr . AddOp Expr
   60 Factor: '(' Expr . ')'

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82
    ')'  shift, and go to state 100

    AddOp  go to state 84


state 72

   40 Factor: Id '[' . Index ']'

    INDEX_TOK  shift, and go to state 101

    Index  go to state 102


state 73

   52 FuncBody: '{' . FuncStmts '}'

    IDENT_TOK  shift, and go to state 1
    PUT_TOK    shift, and go to state 27
    IF_TOK     shift, and go to state 28
    WHILE_TOK  shift, and go to state 29
    FOR_TOK    shift, and go to state 30

    $default  reduce using rule 54 (FuncStmts)

    Id          go to state 31
    Stmt        go to state 103
    PutStmt     go to state 34
    IfStmt      go to state 35
    IfElseStmt  go to state 36
    WhileStmt   go to state 37
    IncrDecr    go to state 38
    ForStmt     go to state 39
    AssignStmt  go to state 40
    FuncCall    go to state 41
    FuncStmts   go to state 104


state 74

   34 IfStmt: IF_TOK Cond FuncBody .
   35 IfElseStmt: IF_TOK Cond FuncBody . ELSE_TOK FuncBody

    ELSE_TOK  shift, and go to state 105

    $default  reduce using rule 34 (IfStmt)


state 75

   46 BoolOp: LT_TOK .

    $default  reduce using rule 46 (BoolOp)


state 76

   47 BoolOp: LTE_TOK .

    $default  reduce using rule 47 (BoolOp)


state 77

   48 BoolOp: GT_TOK .

    $default  reduce using rule 48 (BoolOp)


state 78

   49 BoolOp: GTE_TOK .

    $default  reduce using rule 49 (BoolOp)


state 79

   50 BoolOp: EQUAL_TOK .

    $default  reduce using rule 50 (BoolOp)


state 80

   51 BoolOp: NEQUAL_TOK .

    $default  reduce using rule 51 (BoolOp)


state 81

   69 AddOp: '+' .

    $default  reduce using rule 69 (AddOp)


state 82

   70 AddOp: '-' .

    $default  reduce using rule 70 (AddOp)


state 83

   55 Cond: Expr BoolOp . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 44
    CHRLIT_TOK   shift, and go to state 45
    BOOLLIT_TOK  shift, and go to state 46
    GET_TOK      shift, and go to state 47
    '-'          shift, and go to state 48
    '('          shift, and go to state 49

    Id          go to state 50
    Factor      go to state 51
    BoolString  go to state 52
    Expr        go to state 106
    Term        go to state 55


state 84

   56 Expr: Expr AddOp . Expr

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 44
    CHRLIT_TOK   shift, and go to state 45
    BOOLLIT_TOK  shift, and go to state 46
    GET_TOK      shift, and go to state 47
    '-'          shift, and go to state 48
    '('          shift, and go to state 49

    Id          go to state 50
    Factor      go to state 51
    BoolString  go to state 52
    Expr        go to state 107
    Term        go to state 55


state 85

   71 MultOp: '*' .

    $default  reduce using rule 71 (MultOp)


state 86

   72 MultOp: '/' .

    $default  reduce using rule 72 (MultOp)


state 87

   58 Term: Term MultOp . Factor

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 44
    CHRLIT_TOK   shift, and go to state 45
    BOOLLIT_TOK  shift, and go to state 46
    GET_TOK      shift, and go to state 47
    '-'          shift, and go to state 48
    '('          shift, and go to state 49

    Id          go to state 50
    Factor      go to state 108
    BoolString  go to state 52


state 88

   36 WhileStmt: WHILE_TOK Cond FuncBody .

    $default  reduce using rule 36 (WhileStmt)


state 89

   44 AssignStmt: Id . '=' Expr

    '='  shift, and go to state 61


state 90

   39 ForStmt: FOR_TOK '(' AssignStmt . ';' Cond ';' IncrDecr ')' FuncBody

    ';'  shift, and go to state 109


state 91

   45 FuncCall: Id '(' ')' .

    $default  reduce using rule 45 (FuncCall)


state 92

   44 AssignStmt: Id '=' Expr .
   56 Expr: Expr . AddOp Expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82

    $default  reduce using rule 44 (AssignStmt)

    AddOp  go to state 84


state 93

   19 FuncDecl: '(' ')' "->" BaseType .

    $default  reduce using rule 19 (FuncDecl)


state 94

   33 PutStmt: PUT_TOK '(' StringLit ')' .

    $default  reduce using rule 33 (PutStmt)


state 95

   32 PutStmt: PUT_TOK '(' BoolString ')' .

    $default  reduce using rule 32 (PutStmt)


state 96

   31 PutStmt: PUT_TOK '(' Expr ')' .

    $default  reduce using rule 31 (PutStmt)


state 97

   67 Type: "int" .

    $default  reduce using rule 67 (Type)


state 98

   68 Type: "chr" .

    $default  reduce using rule 68 (Type)


state 99

   65 Factor: GET_TOK '(' Type . ')'

    ')'  shift, and go to state 110


state 100

   60 Factor: '(' Expr ')' .

    $default  reduce using rule 60 (Factor)


state 101

   41 Index: INDEX_TOK .

    $default  reduce using rule 41 (Index)


state 102

   40 Factor: Id '[' Index . ']'

    ']'  shift, and go to state 111


state 103

   53 FuncStmts: Stmt . FuncStmts

    IDENT_TOK  shift, and go to state 1
    PUT_TOK    shift, and go to state 27
    IF_TOK     shift, and go to state 28
    WHILE_TOK  shift, and go to state 29
    FOR_TOK    shift, and go to state 30

    $default  reduce using rule 54 (FuncStmts)

    Id          go to state 31
    Stmt        go to state 103
    PutStmt     go to state 34
    IfStmt      go to state 35
    IfElseStmt  go to state 36
    WhileStmt   go to state 37
    IncrDecr    go to state 38
    ForStmt     go to state 39
    AssignStmt  go to state 40
    FuncCall    go to state 41
    FuncStmts   go to state 112


state 104

   52 FuncBody: '{' FuncStmts . '}'

    '}'  shift, and go to state 113


state 105

   35 IfElseStmt: IF_TOK Cond FuncBody ELSE_TOK . FuncBody

    '{'  shift, and go to state 73

    FuncBody  go to state 114


state 106

   55 Cond: Expr BoolOp Expr .
   56 Expr: Expr . AddOp Expr

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82

    $default  reduce using rule 55 (Cond)

    AddOp  go to state 84


state 107

   56 Expr: Expr . AddOp Expr
   56     | Expr AddOp Expr .

    '+'  shift, and go to state 81
    '-'  shift, and go to state 82

    '+'       [reduce using rule 56 (Expr)]
    '-'       [reduce using rule 56 (Expr)]
    $default  reduce using rule 56 (Expr)

    AddOp  go to state 84


state 108

   58 Term: Term MultOp Factor .

    $default  reduce using rule 58 (Term)


state 109

   39 ForStmt: FOR_TOK '(' AssignStmt ';' . Cond ';' IncrDecr ')' FuncBody

    IDENT_TOK    shift, and go to state 1
    INTLIT_TOK   shift, and go to state 44
    CHRLIT_TOK   shift, and go to state 45
    BOOLLIT_TOK  shift, and go to state 46
    GET_TOK      shift, and go to state 47
    '-'          shift, and go to state 48
    '('          shift, and go to state 49

    Id          go to state 50
    Factor      go to state 51
    BoolString  go to state 52
    Cond        go to state 115
    Expr        go to state 54
    Term        go to state 55


state 110

   65 Factor: GET_TOK '(' Type ')' .

    $default  reduce using rule 65 (Factor)


state 111

   40 Factor: Id '[' Index ']' .

    $default  reduce using rule 40 (Factor)


state 112

   53 FuncStmts: Stmt FuncStmts .

    $default  reduce using rule 53 (FuncStmts)


state 113

   52 FuncBody: '{' FuncStmts '}' .

    $default  reduce using rule 52 (FuncBody)


state 114

   35 IfElseStmt: IF_TOK Cond FuncBody ELSE_TOK FuncBody .

    $default  reduce using rule 35 (IfElseStmt)


state 115

   39 ForStmt: FOR_TOK '(' AssignStmt ';' Cond . ';' IncrDecr ')' FuncBody

    ';'  shift, and go to state 116


state 116

   39 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' . IncrDecr ')' FuncBody

    IDENT_TOK  shift, and go to state 1

    Id        go to state 117
    IncrDecr  go to state 118


state 117

   37 IncrDecr: Id . INCR_TOK
   38         | Id . DECR_TOK

    INCR_TOK  shift, and go to state 58
    DECR_TOK  shift, and go to state 59


state 118

   39 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' IncrDecr . ')' FuncBody

    ')'  shift, and go to state 119


state 119

   39 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' IncrDecr ')' . FuncBody

    '{'  shift, and go to state 73

    FuncBody  go to state 120


state 120

   39 ForStmt: FOR_TOK '(' AssignStmt ';' Cond ';' IncrDecr ')' FuncBody .

    $default  reduce using rule 39 (ForStmt)
